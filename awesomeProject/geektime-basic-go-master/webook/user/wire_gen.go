// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"gitee.com/geekbang/basic-go/webook/pkg/wego"
	"gitee.com/geekbang/basic-go/webook/user/grpc"
	"gitee.com/geekbang/basic-go/webook/user/ioc"
	"gitee.com/geekbang/basic-go/webook/user/repository"
	"gitee.com/geekbang/basic-go/webook/user/repository/cache"
	"gitee.com/geekbang/basic-go/webook/user/repository/dao"
	"gitee.com/geekbang/basic-go/webook/user/service"
	"github.com/google/wire"
)

// Injectors from wire.go:

func Init() *wego.App {
	loggerV1 := ioc.InitLogger()
	db := ioc.InitDB(loggerV1)
	userDAO := dao.NewGORMUserDAO(db)
	cmdable := ioc.InitRedis()
	userCache := cache.NewRedisUserCache(cmdable)
	userRepository := repository.NewCachedUserRepository(userDAO, userCache)
	userService := service.NewUserService(userRepository)
	userServiceServer := grpc.NewUserServiceServer(userService)
	client := ioc.InitEtcdClient()
	server := ioc.InitGRPCxServer(userServiceServer, client, loggerV1)
	app := &wego.App{
		GRPCServer: server,
	}
	return app
}

// wire.go:

var thirdProvider = wire.NewSet(ioc.InitLogger, ioc.InitDB, ioc.InitRedis, ioc.InitEtcdClient)
